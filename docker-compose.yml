version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pgadmin
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  mysqldb:
    container_name: mysqldb
    image: "mysql:latest"
    restart: "on-failure"
    environment:
        - MYSQL_ROOT_PASSWORD=root
        - MYSQL_DATABASE=database
        - MYSQL_USER=root
        - MYSQL_PASSWORD=root
    volumes:
      - '/home/mysql-data-v1:/var/lib/mysql'
    ports:
      - "4004:4000"
    networks:
      - agency

  agency-ms:
    build:
      context: ./Agency-MS
      dockerfile: Dockerfile
    image: agency-ms
    container_name: agency-ms
    ports:
      - "8082:8082"
    environment:
      SPRING_APPLICATION_JSON: '{"eureka":{"client":{"serviceUrl":{"defaultZone":"http://eureka-server:8761/eureka"}}}}'
      spring.datasource.url: jdbc:mysql://mysqldb:4000/agent?createDatabaseIfNotExist=true
    networks:
      - agency
    depends_on:
      - mysqldb


  eureka-server:
    build:
      context: ./Eureka-server
      dockerfile: Dockerfile
    image: eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - spring
    depends_on:
      - zipkin

  hotel-ms:
    build:
      context: ./Hotel-MS
      dockerfile: Dockerfile
    image: hotel-ms
    container_name: Hotel-MS
    ports:
      - "8085:8085"
    environment:
      SPRING_APPLICATION_JSON: '{"eureka":{"client":{"serviceUrl":{"defaultZone":"http://eureka-server:8761/eureka"}}}}'
      spring.datasource.url: jdbc:postgresql://postgres:5432/hotels
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - eureka-server
      - postgres
      - rabbitmq

  fraud-ms:
    build:
      context: ./FRAUD-MS
      dockerfile: Dockerfile
    image: fraud-ms
    container_name: FRAUD-MS
    ports:
      - "8081:8081"
    environment:
      SPRING_APPLICATION_JSON: '{"eureka":{"client":{"serviceUrl":{"defaultZone":"http://eureka-server:8761/eureka"}}}}'
      spring.datasource.url: jdbc:postgresql://postgres:5432/fraud
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - eureka-server
      - postgres
      - rabbitmq

  apigw:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: apigw
    container_name: apigw
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_JSON: '{"eureka":{"client":{"serviceUrl":{"defaultZone":"http://eureka-server:8761/eureka"}}}}'  
    networks:
      - spring
    depends_on:
      - zipkin
      - eureka-server

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - spring

  keycloak-postgres:
    container_name: keycloak-postgres
    image: postgres:13
    volumes:
      - ./postgres_keycloak_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak


  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:18.0.0
    command: ["start-dev", "--import-realm"]
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: keycloak-postgres
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8181:8080"
    volumes:
      - ./realms:/opt/jboss/keycloak/imports/
    depends_on:
      - keycloak-postgres





networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge
  agency:
    driver: bridge

volumes:
  postgres:
  pgadmin:
