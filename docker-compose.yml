version: '3.8'

services:
  postgres:
    container_name: postgres
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pgadmin
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5432:5432"
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - postgres
    restart: unless-stopped

  eureka-server:
    build:
      context: ./Eureka-server
      dockerfile: Dockerfile
    image: eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - spring
    depends_on:
      - zipkin

  hotel-ms:
    build:
      context: ./Hotel-MS
      dockerfile: Dockerfile
    image: hotel-ms
    container_name: Hotel-MS
    ports:
      - "8085:8085"
    environment:
      SPRING_APPLICATION_JSON: '{"eureka":{"client":{"serviceUrl":{"defaultZone":"http://eureka-server:8761/eureka"}}}}'
      spring.datasource.url: jdbc:postgresql://postgres:5432/hotels
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - eureka-server
      - postgres
      - rabbitmq

  fraud-ms:
    build:
      context: ./Fraud-MS
      dockerfile: Dockerfile
    image: fraud-ms
    container_name: FRAUD-MS
    ports:
      - "8081:8081"
    environment:
      SPRING_APPLICATION_JSON: '{"eureka":{"client":{"serviceUrl":{"defaultZone":"http://eureka-server:8761/eureka"}}}}'
      spring.datasource.url: jdbc:postgresql://postgres:5432/fraud
    networks:
      - spring
      - postgres
    depends_on:
      - zipkin
      - eureka-server
      - postgres
      - rabbitmq

  # notification-ms:
  #   build:
  #     context: ./Notification-MS
  #     dockerfile: Dockerfile
  #   image: notification-ms
  #   container_name: Notification-MS
  #   ports:
  #     - "8083:8083"
  #   environment:
  #     spring.data.mongodb.host: mongodb
  #     spring.data.mongodb.port: 27017
  #     spring.data.mongodb.username: admin
  #     spring.data.mongodb.password: admin
  #   networks:
  #     - spring
  #     - mongodb
  #   depends_on:
  #     - zipkin
  #     - eureka-server
  #     - mongodb
  #     - rabbitmq

  apigw:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: apigw
    container_name: apigw
    ports:
      - "8080:8080"
    environment:
      SPRING_APPLICATION_JSON: '{"eureka":{"client":{"serviceUrl":{"defaultZone":"http://eureka-server:8761/eureka"}}}}'  
    networks:
      - spring
    depends_on:
      - zipkin
      - eureka-server

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - spring

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - spring



  keycloak:
    image: quay.io/keycloak/keycloak:18.0.0
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - eureka.client.serviceUrl.defaultZone=http://eureka-server:8761/eureka
    ports:
      - "8181:8080"
    command: start-dev
    networks:
      - spring
    depends_on:
      - eureka-server

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - mongodb
  
networks:
  postgres:
    driver: bridge
  spring:
    driver: bridge
  mongodb:
    driver: bridge  

volumes:
  postgres:
  pgadmin:
  mongodb_data:
    driver: local
